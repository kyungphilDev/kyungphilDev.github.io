I"bP<p><strong>Introducing Python 처음 시작하는 파이썬[2판]</strong> 을 읽으면서,<br />
몇 가지 헷갈리거나 새롭게 알게된 문법, 함수, 메소드들을 정리하려고 합니다.<br />
제 기준으로 작성한 것이므로 참고만 해주세요. 감사합니다.</p>

<h3 id="데이터-타입-값-변수">데이터: 타입, 값, 변수</h3>

<h2 id="튜플과-리스트">튜플과 리스트</h2>

<ul>
  <li><strong>리스트를 문자열로 변환하기: join()</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># join과 split을 서로 정반대의 개념으로 이해하면 편하다.
</span><span class="n">friends</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Harry'</span><span class="p">,</span> <span class="s">'Hermione'</span><span class="p">,</span> <span class="s">'Ron'</span><span class="p">]</span>
<span class="n">separator</span> <span class="o">=</span> <span class="s">'*'</span>
<span class="n">joined</span> <span class="o">=</span> <span class="n">separator</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">friends</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">joined</span>
<span class="s">'Harry*Hermione*Ron'</span>
<span class="n">separated</span> <span class="o">=</span> <span class="n">joined</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="n">separator</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">separated</span>
<span class="p">[</span><span class="s">'Harry'</span><span class="p">,</span> <span class="s">'Hermione'</span><span class="p">,</span> <span class="s">'Ron'</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>
    <p><strong>sort()와 sorted()</strong></p>

    <p>sort()는 리스트 자체를 <strong>내부적으로</strong> 정렬한다. 하지만<br />
sorted()는 리스트의 정렬된 새로운 <strong>복사본</strong>을 반환한다.
(기본 정렬 방식은 오름차순)</p>

    <blockquote>
      <p>내림차순 » some_list.sort(reverse=True)</p>
    </blockquote>
  </li>
  <li>
    <p><strong>리스트 복사하기: copy(), list(), 슬라이스</strong></p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="n">b</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">c</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">d</span><span class="o">=</span><span class="n">a</span><span class="p">[:]</span>
<span class="c1"># b c d 모두 a와 별개인 새로운 객체라는 사실을 확인가능하다.
</span><span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s">'edited'</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">a</span>
<span class="p">[</span><span class="s">'edited'</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">b</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">c</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">d</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li><strong>deepcopy()</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]]</span>
<span class="n">b</span><span class="o">=</span><span class="n">a</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>
<span class="n">c</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">d</span><span class="o">=</span><span class="n">a</span><span class="p">[:]</span>

<span class="c1"># a[2]의 값은 리스트이며, shallow copy를 사용하였음을 확인가능하다.
</span><span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span> <span class="mi">5</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">a</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">b</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">c</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">d</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>

<span class="c1"># 위의 shallow copy를 필요하지 않을 경우 deepcopy를 사용가능하다.
</span><span class="n">b</span><span class="o">=</span><span class="n">copy</span><span class="p">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">a</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">10</span><span class="p">]]</span>
<span class="o">&gt;&gt;&gt;</span><span class="n">b</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]]</span>
</code></pre></div></div>

<ul>
  <li><strong>여러 시퀀스 순회하기: zip()</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">days</span><span class="o">=</span> <span class="p">[</span><span class="s">'Monday'</span><span class="p">,</span> <span class="s">'Tuesday'</span><span class="p">,</span> <span class="s">'Wednesday'</span><span class="p">]</span>
<span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="s">'banana'</span><span class="p">,</span> <span class="s">'oragne'</span><span class="p">,</span> <span class="s">'peach'</span><span class="p">]</span>
<span class="n">drinks</span> <span class="o">=</span> <span class="p">[</span><span class="s">'coffee'</span><span class="p">,</span> <span class="s">'tea'</span><span class="p">,</span> <span class="s">'beer'</span> <span class="p">]</span>
<span class="n">desserts</span> <span class="o">=</span> <span class="p">[</span><span class="s">'tiramisu'</span><span class="p">,</span> <span class="s">'ice cream'</span><span class="p">,</span> <span class="s">'pie'</span><span class="p">,</span> <span class="s">'pudding'</span><span class="p">]</span>

<span class="k">for</span> <span class="n">day</span><span class="p">,</span> <span class="n">fruit</span><span class="p">,</span> <span class="n">drink</span><span class="p">,</span> <span class="n">dessert</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">datys</span><span class="p">,</span> <span class="n">fruits</span><span class="p">,</span> <span class="n">drinks</span><span class="p">,</span> <span class="n">desserts</span><span class="p">):</span>
  <span class="k">print</span><span class="p">(</span><span class="n">daty</span><span class="p">,</span> <span class="s">": drink"</span><span class="p">,</span> <span class="n">drink</span><span class="p">,</span> <span class="s">"- eat"</span><span class="p">,</span> <span class="n">fruit</span><span class="p">,</span> <span class="s">"- enjoy"</span><span class="p">,</span> <span class="n">dessert</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="n">Monday</span> <span class="p">:</span> <span class="n">drink</span> <span class="n">coffee</span> <span class="o">-</span> <span class="n">eat</span> <span class="n">bannana</span> <span class="o">-</span> <span class="n">enjoy</span> <span class="n">tiramisu</span>
<span class="p">...</span>
<span class="c1">#단 zip은 여러 쉬퀀스 중 가장 짧은 시퀀스가 완료되면 멈추기에 desserts의 마지막 pudding은 출력되지 못한다.
</span></code></pre></div></div>

<p>zip()을 사용하여 tuple, dict를 만들 수가 있다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">list</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">english</span><span class="p">,</span> <span class="n">french</span><span class="p">))</span>
<span class="p">[(</span><span class="s">'Monday'</span><span class="p">,</span> <span class="s">'Lundi'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Tuesday'</span><span class="p">,</span> <span class="s">'Mardi'</span><span class="p">),</span> <span class="p">(</span><span class="s">'Wednesday'</span><span class="p">,</span> <span class="s">'Mercedi'</span><span class="p">)]</span>

<span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">english</span><span class="p">,</span> <span class="n">french</span><span class="p">))</span>
<span class="p">{</span><span class="s">'Monday'</span><span class="p">:</span> <span class="s">'Lundi'</span><span class="p">,</span> <span class="s">'tuesday'</span> <span class="p">:</span> <span class="s">'Mardi'</span><span class="p">,</span> <span class="s">'Wednesday'</span> <span class="p">:</span> <span class="s">'Mercredi'</span><span class="p">}</span>
</code></pre></div></div>

<ul>
  <li><strong>리스트 컴프리헨션 방식을 사용한 조금 더 파이써닉한 방법 익히기</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#[표현식 for 항목 in 순회 가능한 객체]
</span><span class="n">number_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">number</span> <span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)]</span>
<span class="o">&gt;&gt;&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>

<span class="c1">#[표현식 for 항목 in 순회 가능한 객체 if 조건]
</span><span class="n">a_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">number</span> <span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span> <span class="k">if</span> <span class="n">number</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>

<span class="c1">#컴프리헨션을 이용하여 , (row, col) 튜플 리스트 생성
</span><span class="n">rows</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span>
<span class="n">cols</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span>
<span class="n">cells</span> <span class="o">=</span> <span class="p">[(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">)</span> <span class="k">for</span> <span class="ow">in</span> <span class="n">rows</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">cols</span><span class="p">]</span>
<span class="k">for</span> <span class="n">cell</span> <span class="ow">in</span> <span class="n">cells</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="n">cell</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="c1">#튜플 언패킹
</span><span class="k">for</span> <span class="n">row</span><span class="p">,</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">cells</span><span class="p">:</span>
  <span class="k">print</span><span class="p">(</span><span class="n">row</span><span class="p">,</span> <span class="n">col</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span>
<span class="mi">1</span> <span class="mi">1</span>
<span class="mi">1</span> <span class="mi">2</span>
<span class="mi">2</span> <span class="mi">1</span>
<span class="mi">2</span> <span class="mi">2</span>
<span class="p">...</span>
</code></pre></div></div>

<ul>
  <li><strong>튜플 vs 리스트</strong><br />
튜플은 immutable한 특성 때문에 리스트에 비해 append(), insert() 등과 같은 함수가 없습니다. 하지만 튜플만의 장점은 다음과 같습니다.</li>
</ul>

<ol>
  <li>튜플은 더 적은 공간을 사용한다.</li>
  <li>실수로 튜플의 항목이 손상될 염려가 없다.</li>
  <li>튜플을 딕셔너리 키로 사용 가능 하다.</li>
  <li>네임드튜플은 객체의 단순한 대안이 될 수 있다.</li>
</ol>

<h2 id="딕셔너리">딕셔너리</h2>

<ul>
  <li><strong>항목 얻기: [key]와 get()</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">some_dict</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'baby'</span><span class="p">:</span> <span class="s">'A'</span><span class="p">,</span>
  <span class="s">'shark'</span><span class="p">:</span> <span class="s">'B'</span><span class="p">,</span>
  <span class="s">'toodo'</span><span class="p">:</span> <span class="s">'C'</span>
<span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">some_dict</span><span class="p">[</span><span class="s">'baby'</span><span class="p">]</span>
<span class="s">'A'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">some_dict</span><span class="p">[</span><span class="s">'papa'</span><span class="p">]</span>
<span class="n">ERROR</span><span class="err">!!</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">'shark'</span> <span class="ow">in</span> <span class="n">some_dict</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">some_dict</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'shark'</span><span class="p">)</span>
<span class="s">'B'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">some_dict</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'papa'</span><span class="p">,</span> <span class="s">'Oops'</span><span class="p">)</span>
<span class="s">'Oops'</span>
</code></pre></div></div>

<ul>
  <li>keys(), values(), items()</li>
  <li>결합하기 {**a, **b}</li>
  <li>update()</li>
  <li>del(), pop() #키 값 중에서 리스트가 있을 때</li>
  <li>copy() » 얕은 복사(shallow copy)</li>
  <li>
    <p>deepcopy() » 깊은 복사</p>
  </li>
  <li>딕셔너리 컴프리헨션</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#{키_표현식: 값_표현식 for 표현식 in 순회 가능 객체}
</span><span class="n">letter_counts</span> <span class="o">=</span> <span class="p">{</span><span class="n">letter</span><span class="p">:</span> <span class="n">word</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">letter</span><span class="p">)</span> <span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="nb">set</span><span class="p">(</span><span class="n">word</span><span class="p">)}</span>
</code></pre></div></div>

<h2 id="set-셋">Set 셋</h2>

<ul>
  <li>&amp;, intersection()</li>
  <li><code class="language-plaintext highlighter-rouge">|</code>, union()</li>
  <li><code class="language-plaintext highlighter-rouge">-</code> , difference()</li>
  <li>^, symmetric_difference()</li>
  <li>&lt;=, issubset()</li>
  <li>&lt;</li>
  <li><code class="language-plaintext highlighter-rouge">&gt;=</code>, issuperset()</li>
  <li>셋 컴프리헨션</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#{표현식 for 표현식 in 순회 가능 객체}
</span><span class="n">letter_counts</span> <span class="o">=</span> <span class="p">{</span><span class="n">letter</span> <span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="nb">set</span><span class="p">(</span><span class="n">word</span><span class="p">)}</span>
</code></pre></div></div>

<ul>
  <li>frozenset()</li>
  <li>mutable type: list, dict, set</li>
</ul>
:ET